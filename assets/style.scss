:root {
    --pane-border-width: 4px;

    --gold: #fc0;
    --aqua: #0dd7;
    --magenta: #d0f;
    --caramel: #f70;
    --gray: #aaac;
    --red: #f66b;
    --white: #fff;
    --black: #000;

    --node-color: #000;
    --node-border-color: #0003;
    --focused-color: var(--gold);
    --focused-source-color: var(--gold);
    --focused-target-color: var(--caramel);
    --text-focused-color: var(--caramel);
    --highlighted-color: var(--aqua);
    --node-mapping-edge-color: var(--magenta);
    --edge-mapping-edge-color: var(--caramel);
    --invalid-color: var(--red);
    --text-field-border-color: var(--gray);
    --text-field-background-color: #fffb;
    --background-color: #fff;
    --edge-color: #666;
    --transparent-white-color: #fff0;
    --text-color: #000;
    --divider-color: #444;
    --pending-color: var(--aqua);
    --selected-color: var(--aqua);
    --equated-color: var(--magenta);
}

html {
    height: 100%;
    width: 100%;
}

body {
    overflow: hidden;
    margin: 0;
    height: 100%;
    width: 100%;
}

input {
    display: none;
}

.outer {
    height: 100%;
    width: 100%;
}

.panes {
    height: 100%;
    width: 100%;
    display: block;
    background-color: var(--divider-color);
    margin-bottom: -3px;
}

.pane {
    position: absolute;
    border: var(--pane-border-width) solid white;
    background-color: var(--background-color);
    box-sizing: border-box;
}

.pane.focused {
    border: var(--pane-border-width) solid var(--focused-color);
}

.pane.focusedSource {
    border: var(--pane-border-width) solid var(--focused-source-color);
}

.pane.focusedTarget {
    border: var(--pane-border-width) solid var(--focused-target-color);
}

.pendingIndicatorContainer {
    height: 3px;
    width: 100%;
}

.pendingIndicator {
    height: 3px;
    background-color: var(--background-color);
}

.pendingIndicator.pending {
    height: 3px;
    background-color: var(--aqua);
}

svg {
    height: 100%;
    width: 100%;
    // To center in the pane:
    display: block;
    margin: auto;
    position: relative;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
}

.nonsvg {
    z-index: 1;
}

.text-field {
    border: 1px solid var(--text-field-border-color);
    min-width: 5%;
    min-width: 20px;
    max-width: 100%;
    min-height: 15px;
    max-height: 100%;
    position: absolute;
    border-radius: 3px;
    outline: 0px solid transparent;
    overflow: auto;
    white-space: pre;
    font-family: monospace;
    background-color: var(--text-field-background-color);
    color: var(--text-color);
}

.edgeTextField.hidden {
    display: none;
}

foreignObject {
    overflow: visible;
}

.title {
    font-size: 30px;
}

.invalidIndicator {
    display: none;
}

.invalidIndicator.invalid {
    display: block;
    fill: var(--invalid-color);
}

.invalidIndicator.pending {
    display: block;
    fill: var(--pending-color);
}

.node {
    fill: var(--node-color);
}

.node.ghost {
    fill: var(--text-field-border-color);
}

.node.focused {
    fill: var(--focused-color);
}

.node.textFocused {
    fill: var(--text-focused-color);
}

.nodeBorder {
    fill: var(--node-border-color);
    opacity: 0.0;
}

.nodeBorder.hovered {
    opacity: 1.0;
}

.nodeBorder.highlighted {
    fill: var(--highlighted-color);
    opacity: 1.0;
}

.nodeBorder.invalid {
    fill: var(--invalid-color);
    opacity: 1.0;
}

.nodeHalo {
    fill: var(--transparent-white-color);
    stroke: var(--node-border-color);
    stroke-width: 25;
    opacity: 0.0;
}

.nodeHalo.hovered {
    opacity: 1.0;
}

.nodeHalo.focused {
    stroke: var(--focused-color);
    opacity: 1.0;
}

.nodeHalo.pending {
    stroke: var(--pending-color);
    opacity: 1.0;
}

.nodeHalo.ready {
    stroke: var(--highlighted-color);
    opacity: 1.0;
}

.nodeHalo.invalid {
    stroke: var(--invalid-color);
    opacity: 1.0;
}

.edge {
    stroke: var(--edge-color);
    stroke-width: 1.5px;
    fill: none;
}

.edge.nodeMappingEdge {
    stroke: var(--node-mapping-edge-color);
    stroke-width: 1.5px;
}

.edge.edgeMappingEdge {
    stroke: var(--edge-mapping-edge-color);
    stroke-width: 1.5px;
}

.edge.invalid {
    stroke: var(--invalid-color);
    stroke-width: 1.5px;
}

.edge.textFocused {
    stroke: var(--text-focused-color);
    stroke-width: 3px;
}

.edge.inPathEquation {
    stroke: var(--equated-color);
    stroke-width: 3px;
}

.edge.focused {
    stroke: var(--focused-color);
    stroke-width: 3px;
    fill: none;
}

.edgeBorder {
    stroke: var(--node-border-color);
    stroke-width: 25px;
    opacity: 0.0;
    fill: none;
}

.edgeBorder.hovered {
    opacity: 1.0;
}

.edgeBorder.selected {
    opacity: 1.0;
    stroke: var(--selected-color);
}

.edgeBorder.invalid {
    stroke: var(--invalid-color);
    stroke-width: 25px;
}

.edgeBorder.pending {
    stroke: var(--pending-color);
    stroke-width: 25px;
    opacity: 0.5;
}

.edgeHalo {
    stroke: var(--node-border-color);
    stroke-width: 25;
    opacity: 0.0;
    fill: none;
}

.edgeHalo.hovered {
    opacity: 1.0;
}

.edgeHalo.focused {
    stroke: var(--focused-color);
    opacity: 1.0;
}

.edgeHalo.ready {
    stroke: var(--highlighted-color);
    opacity: 1.0;
}

.edgeHalo.invalid {
    stroke: var(--invalid-color);
    opacity: 1.0;
}

.drawingEdge {
    pointer-events: none;
}

marker {
    fill: var(--node-color);
}
